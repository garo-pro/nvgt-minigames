/*
Translation class.
This class is useful to integrate translation into your game.
The lang folder will have to be created.
By default, a folder lang is used. However, you can change it by setting the property lfolder.
The language extention is .lng, but you can change it with the property lex.
*/
class translator
{
//The languages folder.
string lfolder="lang";
string base_lang="english";
string base_lang_flag="ðŸ‡ºðŸ‡¸";
string base_lang_code="eng";
//The language extention.
string lex=".lng";
private string langdata, m_langname=this.base_lang;
string get_langname() property
{
return this.m_langname;
}
void refresh(string l, string folder="", string ex="")
{
if(folder=="") folder=this.lfolder;
if(ex=="") ex=this.lex;
if(l=="") l=this.m_langname;
if(l=="") l=this.base_lang;
if(this.lfolder!=folder) this.lfolder=folder;
if(this.lex!=ex) this.lex=ex;
this.langdata="";
if(l!=this.base_lang)
{
file f;
f.open(this.lfolder+"/"+l+""+this.lex+"","r");
string ldd=f.read(f.get_size());
f.close();
this.langdata=ldd;
}
this.m_langname=l;
}
string translate(string l, string text, string firstr="", string secondr="")
{
if(l!=this.m_langname) this.refresh(l);
string c=this.langdata;
if(c=="") c=text;
string[] lines=c.split("\r\n");
if(lines.length()>0)
{
for(uint i=0; i<lines.length();i++)
{
string[] t=lines[i].split("=");
if(t.length()<2) continue;
if(text.lower().contains(t[0].lower())) text=text.replace(t[0],t[1]);
}
}
if(firstr=="" || secondr=="") return text;
string[] fir=firstr.split(" ");
string[] sec=secondr.split("```=```");
if(fir.length()!=sec.length()) return text;
for(uint b=0;b<fir.length();b++)
{
if(text.lower().contains(fir[b].lower())) text=text.replace(fir[b],sec[b]);
}
return text;
}
string get_flag(string l)
{
if(l=="") l=this.m_langname;
if(l=="") l=this.base_lang;
if(l=="") return"";
if(l==this.base_lang) return this.base_lang_flag;
string[] lines;
if(this.m_langname!=l)
{
file f;
f.open(this.lfolder+"/"+l+""+this.lex+"","r");
lines=f.read(f.get_size()).split("\r\n");
f.close();
}
else
{
lines=this.langdata.split("\r\n");
}
for(uint i=0;i<lines.length();i++)
{
string[] d=lines[i].split(":");
if(d[0]=="flag" && d.length()>1) return ""+d[1];
}//i
return"";
}
string get_flag() property
{
return this.get_flag(this.m_langname);
}
string get_code(string l)
{
if(l=="") l=this.m_langname;
if(l=="") l=this.base_lang;
if(l=="") return"";
if(l==this.base_lang) return this.base_lang_code;
string[] lines;
if(this.m_langname!=l)
{
file f;
f.open(this.lfolder+"/"+l+""+this.lex+"","r");
lines=f.read(f.get_size()).split("\r\n");
f.close();
}
else
{
lines=this.langdata.split("\r\n");
}
for(uint i=0;i<lines.length();i++)
{
string[] d=lines[i].split(":");
if(d[0]=="code" && d.length()>1) return ""+d[1];
}//i
return"";
}
string get_code() property
{
return this.get_code(this.m_langname);
}
}//endclass